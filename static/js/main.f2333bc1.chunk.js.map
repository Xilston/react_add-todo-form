{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","types/User.ts","components/TodoList/TodoList.tsx","components/AddTodoForm/AddTodoForm.tsx","types/Todo.ts","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","props","array","todo","usersFromServer","find","cn","TodoList","todos","map","AddTodoForm","users","addTodo","useState","selectedUser","setSelectedUser","newTitle","setNewTitle","showErrors","setShowErrors","action","method","onSubmit","event","preventDefault","trim","htmlFor","type","value","placeholder","onChange","target","disabled","getLatestTodoId","arr","ids","Math","max","App","todosFromServer","setTodos","newTodo","prevTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2333bc1.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User | undefined;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { User, getUserById } from '../../types/User';\nimport { UserInfo } from '../UserInfo';\nimport usersFromServer from '../../api/users';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = (props) => {\n  const { todo } = props;\n  const user: User | undefined = getUserById(usersFromServer, todo.userId);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","export interface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n}\n\nexport function getUserById(array: User[], id: number): User | undefined {\n  return array.find(user => user.id === id);\n}\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList = (props: Props) => {\n  const { todos } = props;\n\n  return (\n    <section className=\"TodoList\">\n      {todos.map(\n        todo => (\n          <TodoInfo\n            todo={todo}\n            key={todo.id}\n          />\n        ),\n      )}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  users: User[];\n  addTodo: (title: string, userId: number) => void;\n}\n\nexport const AddTodoForm = (props: Props) => {\n  const { users, addTodo } = props;\n\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [newTitle, setNewTitle] = useState('');\n\n  const [showErrors, setShowErrors] = useState(false);\n\n  function resetForm() {\n    setSelectedUser(0);\n    setNewTitle('');\n  }\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    if (!showErrors) {\n      setShowErrors(true);\n    }\n\n    if (selectedUser && newTitle.trim()) {\n      addTodo(newTitle, selectedUser);\n      resetForm();\n      setShowErrors(false);\n    }\n  }\n\n  return (\n    <>\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            {'Title: '}\n            <input\n              id=\"titleInput\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={newTitle}\n              placeholder=\"Enter a title\"\n              onChange={(event) => setNewTitle(event.target.value)}\n            />\n          </label>\n          {(!newTitle && showErrors) && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            {'User: '}\n            <select\n              name=\"userSelect\"\n              data-cy=\"userSelect\"\n              value={selectedUser}\n              onChange={(event) => setSelectedUser(+event.target.value)}\n            >\n              <option value=\"0\" key={0} disabled>Choose a user</option>\n              {users.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {(!selectedUser && showErrors) && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n    </>\n  );\n};\n","export interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n}\n\nexport function getLatestTodoId(arr: Todo[]): number {\n  const ids: number[] = arr.map(todo => todo.id);\n\n  return Math.max(...ids);\n}\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { AddTodoForm } from './components/AddTodoForm/AddTodoForm';\nimport { Todo, getLatestTodoId } from './types/Todo';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n\n  function addTodo(title: string, userId: number) {\n    const newTodo: Todo = {\n      completed: false,\n      title,\n      userId,\n      id: getLatestTodoId(todos) + 1,\n    };\n\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n  }\n\n  return (\n    <div className=\"App\">\n      <AddTodoForm\n        users={usersFromServer}\n        // eslint-disable-next-line react/jsx-no-bind\n        addTodo={addTodo}\n      />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}